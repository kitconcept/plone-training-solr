[buildout]
parts +=
    solr-download
    solr-instance


[settings]
solr-host = 127.0.0.1
solr-port = 8983
solr-min-ram = 128M
solr-max-ram = 256M


[solr-download]
recipe = hexagonit.recipe.download
strip-top-level-dir = true
url = https://archive.apache.org/dist/lucene/solr/4.10.4/solr-4.10.4.tgz
md5sum = 8ae107a760b3fc1ec7358a303886ca06

[solr-instance]
recipe = collective.recipe.solrinstance
solr-location = ${solr-download:location}
host = ${settings:solr-host}
port = ${settings:solr-port}
basepath = /solr
# autoCommitMaxTime = 900000
max-num-results = 500
section-name = SOLR
unique-key = UID
logdir = ${buildout:directory}/var/solr
default-search-field = default
default-operator = and
unique-key = UID
java_opts =
  -Dcom.sun.management.jmxremote
  -Djava.rmi.server.hostname=127.0.0.1
  -Dcom.sun.management.jmxremote.port=8984
  -Dcom.sun.management.jmxremote.ssl=false
  -Dcom.sun.management.jmxremote.authenticate=false
  -server
  -Xms${settings:solr-min-ram}
  -Xmx${settings:solr-max-ram}
index =
    name:allowedRolesAndUsers   type:string stored:false multivalued:true
    name:created                type:date stored:true
    name:Creator                type:string stored:true
    name:Date                   type:date stored:true
    name:default                type:text indexed:true stored:false multivalued:true
    name:Description            type:text copyfield:default stored:true
    name:description            type:text copyfield:default stored:true
    name:effective              type:date stored:true
    name:exclude_from_nav       type:boolean indexed:false stored:true
    name:expires                type:date stored:true
    name:getIcon                type:string indexed:false stored:true
    name:getId                  type:string indexed:false stored:true
    name:getRemoteUrl           type:string indexed:false stored:true
    name:is_folderish           type:boolean stored:true
    name:Language               type:string stored:true
    name:modified               type:date stored:true
    name:object_provides        type:string stored:false multivalued:true
    name:path_depth             type:integer indexed:true stored:false
    name:path_parents           type:string indexed:true stored:false multivalued:true
    name:path_string            type:string indexed:false stored:true
    name:portal_type            type:string stored:true
    name:review_state           type:string stored:true
    name:SearchableText         type:text copyfield:default stored:false
    name:searchwords            type:string stored:false multivalued:true
    name:showinsearch           type:boolean stored:false
    name:Subject                type:string copyfield:default stored:true multivalued:true
    name:Title                  type:text copyfield:default stored:true
    name:Type                   type:string stored:true
    name:UID                    type:string stored:true required:true
    name:title_autocomplete     type:text_autocomplete indexed:true stored:true

additional-schema-config =
  <!-- Additional field for autocomplete -->
  <copyField source="Title" dest="title_autocomplete" />

extra-field-types =
  <!-- Custom autocomplete filter for the autocomplete field -->
  <fieldType class="solr.TextField" name="text_autocomplete">
    <analyzer>

      <!-- Creates tokens of characters separated by splitting on whitespace. -->
      <tokenizer class="solr.WhitespaceTokenizerFactory"/>

      <!-- Creates tokens by lowercasing all letters and dropping non-letters. -->
      <filter class="solr.LowerCaseFilterFactory"/>

      <!-- A ShingleFilter constructs shingles (token n-grams) from a token stream. In other words, it creates combinations of tokens as a single token. For example, the sentence "please divide this sentence into shingles" might be tokenized into shingles "please divide", "divide this", "this sentence", "sentence into", and "into shingles". -->
      <filter class="solr.ShingleFilterFactory" maxShingleSize="4" outputUnigrams="true"/>

      <!-- Create n-grams from the beginning edge of a input token: e.g.
      Nigerian => "ni", "nig", "nige", "niger", "nigeri", "nigeria", "nigeria", "nigerian" -->
      <filter class="solr.EdgeNGramFilterFactory" maxGramSize="20" minGramSize="2"/>

     </analyzer>
  </fieldType>

additional-solrconfig =

  <!-- =================================================================== -->
  <!-- SUGGEST (INCLUDED IN THE DEFAULT SOLR SELECT REQUEST HANDLER)       -->
  <!-- =================================================================== -->

  <searchComponent name="spellcheck" class="solr.SpellCheckComponent">
    <str name="queryAnalyzerFieldType">title</str>
    <lst name="spellchecker">

      <!-- The DirectSolrSpellChecker is a spell checker that doesn't require building a separate, parallel index in order.
      https://wiki.apache.org/solr/DirectSolrSpellChecker -->

      <!--
          Optional, it is required when more than one spellchecker is configured.
          Select non-default name with spellcheck.dictionary in request handler.
      -->
      <str name="name">direct</str>

      <!--
          Load tokens from the following field for spell checking,
          analyzer for the field's type as defined in schema.xml are used
      -->
      <str name="field">Title</str>
      <str name="classname">solr.DirectSolrSpellChecker</str>

      <!-- the spellcheck distance measure used, the default is the internal levenshtein -->
      <str name="distanceMeasure">internal</str>

      <!-- minimum accuracy needed to be considered a valid spellcheck suggestion -->
      <float name="accuracy">0.2</float>

      <!-- the maximum #edits we consider when enumerating terms: can be 1 or 2 -->
      <int name="maxEdits">2</int>

      <!-- the minimum shared prefix when enumerating terms -->
      <int name="minPrefix">1</int>

      <!-- maximum number of inspections per result. -->
      <int name="maxInspections">5</int>

      <!-- minimum length of a query term to be considered for correction -->
      <int name="minQueryLength">3</int>

      <!-- maximum threshold of documents a query term can appear to be considered for correction -->
      <!--<float name="maxQueryFrequency">0.01</float>-->

      <!-- uncomment this to require suggestions to occur in 1% of the documents
        <float name="thresholdTokenFrequency">.01</float>
      -->

    </lst>
  </searchComponent>

  <!-- Include the suggest search component into the default '/select' request
       handler.

       See https://wiki.apache.org/solr/SpellCheckComponent#Request_Parameters for all spellcheck component request parameters.
  -->

  <requestHandler name="/select" class="solr.SearchHandler"
  startup="lazy">
    <lst name="defaults">
      <!-- Solr Default Select Request Handler -->
      <str name="echoParams">explicit</str>
      <int name="rows">500</int>

      <!-- Suggest -->
      <str name="df">Title</str>

      <!-- The name of the spellchecker to use. -->
      <str name="spellcheck.dictionary">direct</str>

      <!-- Turn on or off spellcheck suggestions for this request. -->
      <str name="spellcheck">on</str>

      <!-- Provide additional information about the suggestion, such as the frequency in the index. -->
      <str name="spellcheck.extendedResults">false</str>

      <!-- The maximum number of suggestions to return. -->
      <str name="spellcheck.count">5</str>

      <!-- A collation is the original query string with the best suggestions for each term replaced in it. -->
      <str name="spellcheck.collate">false</str>

      <!-- If true, returns an expanded response format detailing collations found. -->
      <str name="spellcheck.collateExtendedResults">false</str>

    </lst>
    <arr name="last-components">
      <str>spellcheck</str>
    </arr>
  </requestHandler>

  <!-- =================================================================== -->
  <!-- AUTOCOMPLETE                                                        -->
  <!-- =================================================================== -->

  <requestHandler name="/autocomplete" class="solr.SearchHandler">
    <lst name="defaults">

      <!-- defType: a reference to the query parser that is used.
           The 'edismax' query parser adds features to enhance search relevancy.
           https://wiki.apache.org/solr/ExtendedDisMax -->
      <str name="defType">edismax</str>

      <!-- rows: maximum number of documents included in the response
           https://wiki.apache.org/solr/CommonQueryParameters#rows -->
      <str name="rows">10</str>

      <str name="fl">title_autocomplete,score</str>
      <str name="qf">title_autocomplete</str>
      <str name="pf">title_autocomplete</str>
      <str name="group">true</str>
      <str name="group.field">title_autocomplete</str>
      <str name="sort">score desc</str>
      <str name="group.sort">score desc</str>

    </lst>
  </requestHandler>
